CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(50),
  email VARCHAR(50)
);

CREATE TABLE products (
  id SERIAL PRIMARY KEY,
  name VARCHAR(50),
  price INTEGER
);

INSERT INTO users (name, email) VALUES ('Anna', 'anna@test.se');
INSERT INTO products (name, price) VALUES ('Laptop', 12000);

SELECT * FROM users;
SELECT * FROM products;

UPDATE users SET name='Anna Svensson' WHERE id=1;
UPDATE products SET price=10000 WHERE id=1;

-- N√§r du skapar FOREIGN KEY kan du l√§gga till:
ALTER TABLE products ADD COLUMN user_id INTEGER;
ALTER TABLE products ADD FOREIGN KEY (user_id) REFERENCES users(id);

-- Nu kan du s√§tta user_id p√• produkterna!
UPDATE products SET user_id = 1 WHERE id = 1;

-- FEL!
-- DELETE FROM users WHERE id=1;
-- DELETE FROM products WHERE id=1;

-- R√§tt alternativ 1:
UPDATE products SET user_id = NULL WHERE user_id = 1;
"Vi bryter l√§nken till anv√§ndaren f√∂rst."
-- ‚úÖ 2. Nu kan du ta bort anv√§ndaren
DELETE FROM users WHERE id = 1;

-- R√§tt alternativ 2:
-- Radera alla produkter som √§gs av anv√§ndaren f√∂rst.
-- Om du vill radera allt kopplat till anv√§ndaren:
-- DELETE FROM products WHERE user_id = 1;
-- DELETE FROM users WHERE id = 1;

-- Alternativ 3 (avancerat s√§tt):
-- Automatiskt ta bort produkter n√§r anv√§ndare raderas
-- (Detta m√•ste du f√∂rbereda i ALTER TABLE-steget)
-- ALTER TABLE products
-- ADD CONSTRAINT fk_user FOREIGN KEY (user_id)
-- REFERENCES users(id)
-- ON DELETE CASCADE;
-- üí¨ Vad g√∂r ON DELETE CASCADE?
-- Om du tar bort en anv√§ndare ‚Üí tar PostgreSQL automatiskt bort alla produkter som pekade p√• den anv√§ndaren.

-- VIKTIGT!:
-- N√§r du har foreign keys:
-- Du m√•ste t√§nka p√• relationer innan du tar bort n√•got.
-- Databasen skyddar dig fr√•n att "tappa bort" kopplad data.
-- D√§rf√∂r kan vi beh√∂va nollst√§lla, rensa, eller anv√§nda ON DELETE CASCADE.



SELECT products.name, products.price, users.name AS owner
FROM products
JOIN users ON products.user_id = users.id;


