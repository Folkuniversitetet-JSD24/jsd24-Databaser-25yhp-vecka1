🧑‍💻 Självständiga SQL/ER-diagram-övningar

🧠 Mål:
- Träna på att rita ER-diagram
- Förstå relationstyper och junction-tabeller
- Översätta diagram till SQL-tabeller
- Implementera strukturen i PostgreSQL

📝 Instruktioner för alla övningar:

1. Rita ER-diagram i t.ex. dbdiagram.io eller valfritt verktyg
2. Identifiera entiteter, attribut och relationer
3. Skriv SQL-syntax för att skapa tabellerna
4. Skapa databasen och tabellerna i pgAdmin

🟢 Lätt nivå

1. Bloggplattform:

Entiteter:
users (id, name)

posts (id, title, content, user_id)

Relationer:
1–M: En användare kan ha flera inlägg

2. Bokbibliotek

Scenario:
Ett bibliotek hanterar böcker och författare.

Entiteter:
authors (id, name)

books (id, title, author_id)

Relationer:
1–M: En författare kan ha skrivit flera böcker

Uppgift:
Rita ER-diagram i valfritt verktyg

Översätt till SQL

Skapa tabeller i PostgreSQL

--------------------------------------
🟠 Medel nivå

1. Filmuthyrning:

Entiteter:
customers (id, name)

movies (id, title)

rentals (customer_id, movie_id, date)

Relationer:
M–M: En kund kan hyra flera filmer

Junction-tabell: rentals

2. Biobokning

Scenario:
En biograf vill hantera filmer och föreställningar.

Entiteter:
movies (id, title, genre)

screenings (id, movie_id, date, time)

Relationer:
1–M: En film kan ha flera föreställningar

Bonusdiskussion:
Ska vi modellera salonger som egen entitet? Vad händer om en föreställning är inställd?

--------------------------------------
🔴 Svår nivå

1. E-handel med kundvagn och ordrar:

Entiteter:
customers (id, name, email)

products (id, name, price)

orders (id, customer_id, order_date)

order_items (order_id, product_id, quantity)

Relationer:
1–M: customers → orders

M–M: orders ↔ products via order_items (junction)

1–M: order_items innehåller en produkt i en specifik order

2. Socialt nätverk

Scenario:
Användare kan följa andra användare. Alla användare har en profil och kan skriva inlägg.

Entiteter:
users (id, name, email)

posts (id, content, user_id)

follows (follower_id, followed_id) ← junction-tabell för användare-följer-användare

Relationer:
1–M: användare → inlägg

M–M: användare ↔ användare (via follows)

Uppgift:
Rita ER-diagram

Skapa SQL med kombinerad PK i follows

Fundera: Hur kan man förhindra att en användare följer sig själv?
